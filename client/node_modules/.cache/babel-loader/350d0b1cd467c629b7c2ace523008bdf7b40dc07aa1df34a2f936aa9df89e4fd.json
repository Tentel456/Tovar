{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/Downloads/Tovar-main/Tovar/client/src/components/AdminRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { CircularProgress } from '@mui/material';\nimport { AuthContext } from '../context/AuthContext';\n\n// Component to protect routes that require admin privileges\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = () => {\n  _s();\n  const {\n    currentUser,\n    loading\n  } = useContext(AuthContext);\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '2rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Redirect to home if not authenticated or not admin\n  if (!currentUser || currentUser.role !== 'admin') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/products\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the child routes\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n_s(AdminRoute, \"CjcgYKvE1fHrpIpZCZsawF61wbc=\");\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","useContext","Navigate","Outlet","CircularProgress","AuthContext","jsxDEV","_jsxDEV","AdminRoute","_s","currentUser","loading","style","display","justifyContent","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","role","to","replace","_c","$RefreshReg$"],"sources":["/Users/aleksandr/Downloads/Tovar-main/Tovar/client/src/components/AdminRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { CircularProgress } from '@mui/material';\nimport { AuthContext } from '../context/AuthContext';\n\n// Component to protect routes that require admin privileges\nconst AdminRoute = () => {\n  const { currentUser, loading } = useContext(AuthContext);\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: '2rem' }}>\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  // Redirect to home if not authenticated or not admin\n  if (!currentUser || currentUser.role !== 'admin') {\n    return <Navigate to=\"/products\" replace />;\n  }\n\n  // Render the child routes\n  return <Outlet />;\n};\n\nexport default AdminRoute; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,gBAAgB,QAAQ,eAAe;AAChD,SAASC,WAAW,QAAQ,wBAAwB;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,WAAW;IAAEC;EAAQ,CAAC,GAAGV,UAAU,CAACI,WAAW,CAAC;;EAExD;EACA,IAAIM,OAAO,EAAE;IACX,oBACEJ,OAAA;MAAKK,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAC,QAAA,eAC3ET,OAAA,CAACH,gBAAgB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;;EAEA;EACA,IAAI,CAACV,WAAW,IAAIA,WAAW,CAACW,IAAI,KAAK,OAAO,EAAE;IAChD,oBAAOd,OAAA,CAACL,QAAQ;MAACoB,EAAE,EAAC,WAAW;MAACC,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5C;;EAEA;EACA,oBAAOb,OAAA,CAACJ,MAAM;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACX,EAAA,CAnBID,UAAU;AAAAgB,EAAA,GAAVhB,UAAU;AAqBhB,eAAeA,UAAU;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}